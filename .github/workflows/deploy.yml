name: Deploy OpenMCP-Chain

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.image }}
      tag: ${{ steps.meta.outputs.tag }}
      repository: ${{ steps.meta.outputs.repository }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Run unit tests
        run: go test ./...

      - name: Prepare image metadata
        id: meta
        run: |
          IMAGE_NAME=$(echo "${IMAGE_NAME}" | tr '[:upper:]' '[:lower:]')
          IMAGE_TAG=${GITHUB_SHA::12}
          echo "tag=${IMAGE_TAG}" >> "$GITHUB_OUTPUT"
          echo "repository=${REGISTRY}/${IMAGE_NAME}" >> "$GITHUB_OUTPUT"
          echo "image=${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: deploy/docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.image }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: production
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure kubeconfig
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          mkdir -p ~/.kube
          echo "$KUBE_CONFIG" | base64 -d > ~/.kube/config

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: v1.29.0

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.13.3

      - name: Deploy with Helm
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        run: |
          helm upgrade --install openmcp-chain ./deploy/k8s \
            --namespace openmcp \
            --create-namespace \
            --set image.repository=${{ needs.build.outputs.repository }} \
            --set image.tag=${{ needs.build.outputs.tag }} \
            --set secrets.openai.value="$OPENAI_API_KEY" \
            --set secrets.mysql.value="$MYSQL_PASSWORD"
