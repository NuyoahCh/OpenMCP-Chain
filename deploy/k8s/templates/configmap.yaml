apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "openmcp-chain.fullname" . }}-config
  labels:
    app.kubernetes.io/name: {{ include "openmcp-chain.name" . }}
    helm.sh/chart: {{ include "openmcp-chain.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  openmcp.json.tmpl: |
    {
      "server": {
        "address": ":8080"
      },
      "storage": {
        "task_store": {
          "driver": "mysql",
          "dsn": "${MYSQL_USER:-{{ .Values.config.mysql.user }}}:${MYSQL_PASSWORD:-changeme}@tcp(${MYSQL_HOST:-{{ .Values.config.mysql.host }}}:${MYSQL_PORT:-{{ .Values.config.mysql.port }}})/${MYSQL_DATABASE:-{{ .Values.config.mysql.database }}}?parseTime=true&loc=Local",
          "max_open_conns": 20,
          "max_idle_conns": 10
        }
      },
      "llm": {
        "provider": "openai",
        "openai": {
          "enabled": true,
          "api_key_env": "OPENAI_API_KEY",
          "base_url": "${OPENAI_BASE_URL:-{{ .Values.config.openai.baseURL }}}",
          "model": "${OPENAI_MODEL:-{{ .Values.config.openai.model }}}",
          "timeout_seconds": 60
        },
        "python_bridge": {
          "enabled": false,
          "python_executable": "python3",
          "script_path": "scripts/llm_bridge.py",
          "working_dir": ".."
        }
      },
      "agent": {
        "memory_depth": 5
      },
      "knowledge": {
        "source": "{{ .Values.config.knowledgeSource }}",
        "max_results": 3
      },
      "web3": {
        "rpc_url": "{{ .Values.config.web3.rpcURL }}",
        "chain_config": "../configs/chain.yaml",
        "default_chain": "local-ethereum"
      },
      "runtime": {
        "data_dir": "${OPENMCP_DATA_DIR:-{{ .Values.config.dataDir }}}"
      },
      "task_queue": {
        "driver": "memory",
        "worker": 4
      },
      "observability": {
        "logging": {
          "level": "${LOG_LEVEL:-{{ .Values.env.logLevel }}}",
          "format": "json",
          "outputs": ["stdout"]
        },
        "metrics": {
          "enabled": {{ if .Values.config.metricsEnabled }}true{{ else }}false{{ end }},
          "address": ""
        },
        "audit": {
          "enabled": true,
          "file": "${OPENMCP_DATA_DIR:-{{ .Values.config.dataDir }}}/audit.log",
          "max_size_mb": 100,
          "max_backups": 7,
          "max_age_days": 30
        }
      }
    }
